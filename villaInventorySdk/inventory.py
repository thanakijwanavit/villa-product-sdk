# AUTOGENERATED! DO NOT EDIT! File to edit: inventory.ipynb (unless otherwise specified).

__all__ = ['InventorySdk']

# Cell
from botocore.config import Config
from s3bz.s3bz import S3, Requests
from lambdasdk.lambdasdk import Lambda
import bz2, json, boto3, base64, logging

# Cell
class InventorySdk:

  def __init__(self, stackName = 'dev', user = None, pw = None, region = 'ap-southeast-1'):
    self.stackName = stackName
    self.lambdaClient = Lambda(user =user, pw=pw, region = region)
    self.user = user; self.pw = pw; self.region = region


  def updateWithS3(self, data,
                   inputKeyName = 'input-data-name',
                   inputBucketName = 'input-bucket-name',
                   functionName='update-inventory-s3-dev-manual',
                   user= None, pw= None,
                   invocationType = 'Event'):
    user = user or self.user; pw = pw or self.pw

    S3.save(key = inputKeyName,
            objectToSave = data ,
            bucket = inputBucketName,
            user=user, pw=pw)
    logging.info(f'data is saved to s3, invoking ingestion function')

    lambdaPayload = {
        'inputBucketName': inputBucketName,
        'inputKeyName': inputKeyName
    }
    logging.info(f'input to lambda is {lambdaPayload}')
    return self.lambdaClient.invoke(functionName= functionName ,input=lambdaPayload,
                                    invocationType= invocationType )

  def querySingleProduct(self, functionName='single-product-query-dev-manual',
                         ib_prcode= None, user=None, pw=None):
    '''query a single product'''
    input = { 'ib_prcode': ib_prcode }
    return self.lambdaClient.invoke(
        functionName = functionName, input = input )['Payload'].read()
